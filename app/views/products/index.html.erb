<% content_for :title, "Products" %>

<% if @low_stock_products.any? %>
  <div class="alert alert-warning alert-dismissible fade show" role="alert">
    <strong>Low Stock Alert!</strong> The following products have low stock:
    <ul style="list-style-type: disc; padding-left: 20px;">
  <% @low_stock_products.each do |product| %>
    <li><%= product.name %> (Stock: <%= product.stock %>)</li>
  <% end %>
    </ul>

    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
      <span aria-hidden="true">&times;</span>
    </button>
  </div>
<% end %>
  
  <div class="d-flex justify-content-between mb-4">
    <h1 class="font-weight-bold">Products</h1>
  </div>

<!-- CSV Import Form -->
<%= form_with url: import_products_path, local: true, html: { multipart: true, class: "form-inline justify-content-end mb-3" } do %>
  <div class="form-group mr-2">
    <div class="custom-file">
      <%= file_field_tag :file, class: "custom-file-input", id: "csvFileInput" %>
      <%= label_tag :file, "Choose .csv file", class: "custom-file-label", for: "csvFileInput", data: { default_label: "Choose .csv file" }, style: "cursor: pointer;" %>

    </div>
  </div>
  <div class="form-group">
    <%= submit_tag "Import Products", class: "btn btn-primary" %>
  </div>
<% end %>

<!-- XLSX Import Form -->
<%= form_with url: import_products_path, local: true, html: { multipart: true, class: "form-inline justify-content-end mb-3" } do %>
  <div class="form-group mr-2">
    <div class="custom-file">
      <%= file_field_tag :file, class: "custom-file-input", id: "xlsxFileInput" %>
      <%= label_tag :file, "Choose .xlsx file", class: "custom-file-label", for: "xlsxFileInput", data: { default_label: "Choose .xlsx file" }, style: "cursor: pointer;" %>
    </div>
  </div>
  <div class="form-group">
    <%= submit_tag "Import Products", class: "btn btn-primary" %>
  </div>
<% end %>


  <%= render "search_form" %>
  

  <% if @products.any? %>
    <table class="table table-striped table-bordered table-hover">
      <thead class="thead-dark">
        <tr>
          <th>Name</th>
          <th>SKU</th>
          <th>Description</th>
          <th>Category</th>
          <th>Price</th>
          <th>Stock</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        <% @products.each do |product| %>
          <tr>
            <td><%= product.name %></td>
            <td><%= product.sku %></td>
            <td><%= truncate(product.description, length: 50) %></td>
            <td><%= product.category&.name || "No Category" %></td>
            <td><%= number_to_currency(product.price) %></td>
            <td><%= product.stock %></td>
            <td>
              <%= link_to "Show", product, class: "btn btn-info btn-sm" %>
              <%= link_to "Edit", edit_product_path(product), class: "btn btn-secondary btn-sm" %>
              <%= button_to "Delete", product, method: :delete, data: { confirm: "Are you sure?" }, class: "btn btn-danger btn-sm" %>
            </td>
          </tr>
        <% end %>
      </tbody>
    </table>

  <nav class="pagination-wrapper my-4">
    <%= will_paginate @products, class: "pagination justify-content-center" %>
  </nav>

  <% else %>
    <p class="text-center text-muted">No products found.</p>
  <% end %>
</div>

<!-- products/index.html.erb -->

<!-- Your product table and content here -->

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const initCustomFileLabel = (inputId) => {
      const input = document.getElementById(inputId);
      const label = document.querySelector(`label[for="${inputId}"]`);

      if (input && label) {
        // Reset label to default text
        label.textContent = label.dataset.defaultLabel;

        // Update label when file is selected
        input.addEventListener("change", function () {
          const fileName = input.files[0]?.name;
          if (fileName) {
            label.textContent = fileName;
          } else {
            label.textContent = label.dataset.defaultLabel;
          }
        });
      }
    };

    initCustomFileLabel("csvFileInput");
    initCustomFileLabel("xlsxFileInput");
  });
</script>





